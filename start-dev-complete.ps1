# Script para iniciar o servidor backend e o frontend Vite simultaneamente
# Executa em modo desenvolvimento com hot reload

Write-Host "üöÄ Iniciando ambiente de desenvolvimento Devz..." -ForegroundColor Cyan
Write-Host ""

# Verificar se as depend√™ncias est√£o instaladas
if (-not (Test-Path "node_modules")) {
    Write-Host "üì¶ Instalando depend√™ncias..." -ForegroundColor Yellow
    npm install
    Write-Host ""
}

# Verificar arquivo .env
if (-not (Test-Path ".env")) {
    Write-Host "‚ö†Ô∏è  AVISO: Arquivo .env n√£o encontrado!" -ForegroundColor Red
    Write-Host "Criando arquivo .env com valores padr√£o..." -ForegroundColor Yellow
    @"
# Porta do servidor
PORT=3001

# Configura√ß√£o de Email
EMAIL_USER=atena.digital03@gmail.com
EMAIL_PASS=vpcx dqzk phch odgi
EMAIL_USER_TRABALHE_CONOSCO=financeiro01atena@gmail.com
EMAIL_PASS_TRABALHE_CONOSCO=smuf ptmg dciu kdxo
"@ | Out-File -FilePath .env -Encoding utf8
    Write-Host "‚úÖ Arquivo .env criado!" -ForegroundColor Green
    Write-Host ""
}

Write-Host "‚úÖ Iniciando servidor backend (porta 3001)..." -ForegroundColor Green
Write-Host "‚úÖ Iniciando servidor frontend Vite (porta 5173)..." -ForegroundColor Green
Write-Host ""
Write-Host "üìù Logs:" -ForegroundColor Cyan
Write-Host "----------------------------------------" -ForegroundColor Gray
Write-Host ""

# Iniciar backend e frontend em paralelo
$backend = Start-Process powershell -ArgumentList "-NoExit", "-Command", "node server.js" -PassThru
$frontend = Start-Process powershell -ArgumentList "-NoExit", "-Command", "npm run dev" -PassThru

Write-Host "‚úÖ Servidores iniciados!" -ForegroundColor Green
Write-Host ""
Write-Host "üåê Frontend: http://localhost:5173" -ForegroundColor Cyan
Write-Host "üîå Backend API: http://localhost:3001" -ForegroundColor Cyan
Write-Host ""
Write-Host "‚ö†Ô∏è  Para parar os servidores:" -ForegroundColor Yellow
Write-Host "   - Feche as janelas do PowerShell que foram abertas" -ForegroundColor Gray
Write-Host "   - Ou execute: .\stop-dev.ps1" -ForegroundColor Gray
Write-Host ""

# Aguardar um momento para os servidores iniciarem
Start-Sleep -Seconds 3

# Testar se o backend est√° respondendo
try {
    $response = Invoke-WebRequest -Uri "http://localhost:3001/api/health" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ Backend API est√° respondendo!" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Backend pode estar demorando para iniciar. Aguarde alguns segundos..." -ForegroundColor Yellow
}

Write-Host ""
Write-Host "‚ú® Ambiente de desenvolvimento pronto!" -ForegroundColor Green
