name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run lint check
      run: npm run lint || echo "No lint script found, skipping..."
      continue-on-error: true
      
    - name: Run tests
      run: npm test || echo "No test script found, skipping..."
      continue-on-error: true
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-node-${{ matrix.node-version }}
        path: build/
        retention-days: 7
        
  deploy-staging:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for staging
      run: npm run build
      
    - name: Deploy to staging
      run: |
        echo "ðŸš€ Deploying to staging environment..."
        # Adicione aqui seus comandos de deploy para staging
        # Exemplo: rsync, scp, ou integraÃ§Ã£o com serviÃ§os de cloud
        
  deploy-production:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: production
      url: https://devz.com.br # Substitua pela URL do seu site
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build
      
    - name: Deploy to production
      run: |
        echo "ðŸš€ Deploying to production environment..."
        # Adicione aqui seus comandos de deploy para produÃ§Ã£o
        # Exemplo:
        # - Upload para S3/CloudFront
        # - Deploy para Vercel/Netlify
        # - SCP para servidor prÃ³prio
        # - Docker build e push
        
    - name: Notify deployment success
      run: |
        echo "âœ… Production deployment completed successfully!"
